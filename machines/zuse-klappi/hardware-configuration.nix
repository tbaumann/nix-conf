# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  hardware.graphics = {
    enable = true;
    extraPackages = with pkgs; [
      intel-media-driver # LIBVA_DRIVER_NAME=iHD
      vaapiIntel # LIBVA_DRIVER_NAME=i965 (older but works better for Firefox/Chromium)
      vaapiVdpau
      libvdpau-va-gl
    ];
  };
  services.btrfs.autoScrub.enable = true;
  hardware.sensor.iio.enable = true;
  security.tpm2.enable = true;

  services.tlp = {
    enable = true;
    settings = {
      START_CHARGE_THRESH_BAT0 = 60;
      STOP_CHARGE_THRESH_BAT0 = 90;
    };
  };
  fileSystems."/" = {
    device = "/dev/disk/by-partlabel/disk-disk1-root";
    fsType = "btrfs";
    options = ["subvol=SYSTEM/rootfs"];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-partlabel/disk-disk1-root";
    fsType = "btrfs";
    options = ["subvol=SYSTEM/nix"];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-partlabel/disk-disk1-root";
    fsType = "btrfs";
    options = ["subvol=DATA/home"];
  };

  fileSystems."/persist" = {
    device = "/dev/disk/by-partlabel/disk-disk1-root";
    fsType = "btrfs";
    options = ["subvol=DATA/persist"];
  };

  /*
  fileSystems."/swap" = {
    device = "/dev/disk/by-partlabel/disk-disk1-root";
    fsType = "btrfs";
    options = ["subvol=swap"];
  };
  */

  fileSystems."/boot" = {
    device = "/dev/disk/by-partlabel/disk-disk1-ESP";
    fsType = "vfat";
  };

  swapDevices = [{device = "/swap/swapfile";}];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  #  networking.interfaces.wlp60s0.useDHCP = lib.mkDefault true;

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  services.thermald.enable = true;
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  nixpkgs.hostPlatform = lib.mkForce "x86_64-linux";
}
